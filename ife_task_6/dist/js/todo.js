"use strict";define(["vue","store"],function(t,e){function i(t,e,i){this.addTime=Date.now(),this.cid="cid_"+this.addTime,this.pid=t||null,this.level=e||0,this.title=i||"",this.childCatList=[],this.childTodoList=[]}function n(t,e,i,n){this.addTime=Date.now(),this.tid="tid_"+this.addTime,this.cid=t,this.level=0,this.title=e,this.content=i,this.isFinish=!1,this.expireTime=n}var s=function(t,e){if(!t)return"";e=e||"-";var i=new Date(+t),n=i.getFullYear(),s=i.getMonth()+1,a=i.getDate();return[n,s<10?"0"+s:s,a<10?"0"+a:a].join(e)},a={prompt:function(t,e){return window.prompt(t,e)},alert:function(t){return window.alert(t)},confirm:function(t){return window.confirm(t)},showInfo:function(t){window.alert(t)}},o=e.data("topCatId");if(!o){var d=new i(null,0,"顶级分类");d.addTime=d.addTime-1,d.cid="cid_"+d.addTime,o=d.cid,e.data("topCatId",o);var c=new i(o,d.level+1,"默认分类");e.data(c.cid,c),d.childCatList.push(c.cid),e.data(o,d),d=null,c=null}var l=new t,r={currentCatId:"",currentTodoId:"",currentStatu:"",allTasks:0,currentPageIndex:0},h={template:'\n            <div>\n                <ul>\n                    <li>\n                        <a  class="item" id="show-all-todo"\n                            :class="{selected: isSelect(\'show-all-todo\')}"\n                            @click="handleSelect(\'show-all-todo\')">\n                            <span>所有任务</span>\n                            <span class="td-count">({{ allTasks }})</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a  class="item" id="show-all-cat"\n                            :class="{selected: isSelect(\'show-all-cat\')}"\n                            @click="handleSelect(\'show-all-cat\')" >\n                            <span>分类列表</span>\n                        </a>\n                        <div id="category-list">\n                            <category-list :parent="topCat"></category-list>\n                        </div>\n                    </li>\n\n                </ul>\n                <footer class="footer">\n                    <button class="btn-add" @click="addCategory">新增分类</button>\n                </footer>\n            </div>\n        ',data:function(){return{instate:r,topCat:e.data(o)}},computed:{allTasks:function(){return this.instate.allTasks}},methods:{handleSelect:function(t){this.instate.currentCatId=t,"show-all-todo"===t&&this.instate.currentPageIndex++},isSelect:function(t){return this.instate.currentCatId===t},addCategory:function(){if("show-all-todo"===this.instate.currentCatId)return void a.alert("请选择具体分类进行添加！");var t="show-all-cat"===this.instate.currentCatId?this.topCat.cid:this.instate.currentCatId;l.$emit("add-category",t)}}};t.component("category-list",{template:'\n            <ul>\n                <category-item\n                    v-for="cate in list"\n                        :item="cate"\n                        :key="cate.cid"\n                        @remove-cat="removeCat">\n                </category-item>\n            </ul>\n        ',props:{parent:{type:Object,required:!0}},watch:{parent:{handler:function(){e.data(this.parent.cid,this.parent)},deep:!0}},data:function(){return{list:[],instate:r}},created:function(){this.initList(),l.$on("add-category",this.addCategory),l.$on("added-todo",this.addedTodo),l.$on("delete-todo",this.deleteTodo)},methods:{initList:function(){var t=this.parent.childCatList;if(t.length){this.instate.currentCatId||(this.instate.currentCatId=t[0]);var i=[];t.forEach(function(t){i.push(e.data(t))}),this.list=i}},removeCat:function(t){if(a.confirm("确定删除 <"+t.title+"> 分类及其所有子分类和任务吗？")){this.list.splice(this.list.indexOf(t),1),this.parent.childCatList.splice(this.parent.childCatList.indexOf(t.cid),1);var i=e.data(this.instate.currentCatId);i&&i.addTime>=t.addTime&&(this.instate.currentCatId=this.list[0]?this.list[0].cid:t.pid)}},hasSameName:function(t){for(var e=0,i=this.list.length;e<i;e+=1)if(this.list[e].title===t)return!0;return!1},getValidName:function(){for(var t="",e=0,i=this.list.length;e<i;e+=1)if(t="未命名分类"+(e+1),!this.hasSameName(t))return t;return t="未命名分类"+(e+1)},addCategory:function(t){if(t===this.parent.cid){for(var n=this.getValidName(),s="请输入创建的子分类名称：",o=!1;!o&&null!==(n=a.prompt(s,n));)""===n.trim()?(n="",o=!1,s="注意：名称不能为空！"):/[^\w\u4E00-\u9FA5]+/g.test(n)?(o=!1,s="注意：名称只能包含汉字、字母、数字、下划线！"):this.hasSameName(n)?(o=!1,s="注意：该分类下已使用过相同名称！"):o=!0;if(o){var d=new i(t,this.parent.level+1,n);this.list.push(d),e.data(d.cid,d),this.parent.childCatList.push(d.cid),this.$emit("add-category")}}},addedTodo:function(t){t.cid===this.parent.cid&&(this.parent.childTodoList.push(t.tid),this.instate.allTasks+=1)},deleteTodo:function(t){t.cid===this.parent.cid&&(this.parent.childTodoList.splice(this.parent.childTodoList.indexOf(t.tid),1),this.instate.allTasks-=1)}}}),t.component("category-item",{template:'\n            <li>\n                <a  :id="item.cid" class="item item-cat icon-folder"\n                    :class="{selected: isSelect(), \'folder-opened\': isOpen}"\n                    :style="{paddingLeft: paddingLeft + \'px\'}"\n                    @click="handleSelect">\n                    <span>{{ item.title }}</span>\n                    <span class="td-count">({{ item.childTodoList.length }})</span>\n                    <span class="act-del" @click.stop="removeCat"></span>\n                </a>\n                <category-list\n                    v-show="isOpen"\n                    :parent="item"\n                    @add-category="addChildCat">\n                </category-list>\n            </li>\n        ',props:["item"],data:function(){return{isOpen:!1,instate:r,incrPadding:20}},created:function(){this.instate.allTasks+=this.item.childTodoList.length},destroyed:function(){e.remove(this.item.cid),e.remove(this.item.childTodoList),this.instate.allTasks-=this.item.childTodoList.length},computed:{paddingLeft:function(){return this.item.level*this.incrPadding}},methods:{handleSelect:function(){this.isOpen=!this.isOpen,this.instate.currentCatId=this.item.cid,this.instate.currentPageIndex++},isSelect:function(){return this.instate.currentCatId===this.item.cid},removeCat:function(){this.$emit("remove-cat",this.item)},addChildCat:function(){this.isOpen=!0}}});var u={template:'\n            <div>\n                <div class="header">\n                    <div class="btns">\n                        <div class="btns-inner" >\n                            <button id="statu-all"  :class="{selected: isSelect(\'statu-all\')}" @click.stop="switchStatu(\'statu-all\')">&nbsp;所有&nbsp;</button>\n                            <button id="statu-not"  :class="{selected: isSelect(\'statu-not\')}" @click.stop="switchStatu(\'statu-not\')">未完成</button>\n                            <button id="statu-done" :class="{selected: isSelect(\'statu-done\')}" @click.stop="switchStatu(\'statu-done\')">已完成</button>\n                        </div>\n                    </div>\n                </div>\n                <todo-list id="todo-list" :todoList="filterTodos"></todo-list>\n                <footer class="footer">\n                    <button class="btn-add" @click.stop="addTodo">新增任务</button>\n                </footer>\n            </div>\n        ',data:function(){return{todos:[],instate:r}},created:function(){this.initTodoList(),this.instate.currentStatu="statu-all",l.$on("added-todo",this.addedTodo),l.$on("delete-todo",this.deleteTodo)},watch:{"instate.currentCatId":function(){this.initTodoList()}},computed:{filterTodos:function(){var t=[];switch(this.instate.currentStatu){case"statu-not":t=this.todos.filter(function(t){return!t.isFinish});break;case"statu-done":t=this.todos.filter(function(t){return t.isFinish});break;case"statu-all":t=this.todos}return t}},methods:{isSelect:function(t){return this.instate.currentStatu===t},switchStatu:function(t){this.instate.currentStatu=t},addTodo:function(){this.instate.currentCatId.indexOf("cid_")<0?a.alert("请选择具体分类进行添加！"):(this.instate.currentPageIndex++,l.$emit("add-todo"))},addedTodo:function(t){this.todos.push(t)},deleteTodo:function(t){this.todos.splice(this.todos.indexOf(t),1)},initTodoList:function(){var t=[],i=this.instate.currentCatId;switch(i){case"show-all-cat":break;case"show-all-todo":t=this.getAllTodoList();break;default:t=e.data(i).childTodoList}var n=[];t.forEach(function(t){n.push(e.data(t))}),this.todos=n},getAllTodoList:function(){var t=[];return function i(n){var s=e.data(n);if(s){t=t.concat(s.childTodoList);for(var a=s.childCatList,o=0,d=a.length;o<d;o+=1)i(a[o])}}(o),t}}};t.component("todo-list",{template:'\n            <div>\n                <ul>\n                    <li v-for="date in dateKeys">\n                        <time>{{ date }}</time>\n                        <ul>\n                            <todo-item v-for="todo in archivedTodos[date]" :item="todo" :key="todo.tid"></todo-item>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n        ',props:["todoList"],watch:{todoList:function(){this.initArchiveTodoList()}},created:function(){this.initArchiveTodoList()},mounted:function(){this.selectFirst()},updated:function(){this.selectFirst()},data:function(){return{instate:r,archivedTodos:{}}},computed:{dateKeys:function(){var t=Object.keys(this.archivedTodos);return t.sort(function(t,e){return t>e?-1:t<e?1:0}),t}},methods:{initArchiveTodoList:function(){for(var t={},e=this.todoList,i=0,n=e.length;i<n;i+=1){var a=s(e[i].expireTime);t[a]||(t[a]=[]),t[a].push(e[i])}this.archivedTodos=t},selectFirst:function(){var t=this.archivedTodos[this.dateKeys[0]],e=t&&t[0];this.instate.currentTodoId=e&&e.tid||"",l.$emit("show-item",e)}}}),t.component("todo-item",{template:'\n            <li>\n                <a  :id="item.tid" class="item item-todo"\n                    :class="{ selected: isSelect(), \'done-item\': item.isFinish }"\n                    @click.stop="handleSelect">\n                    <span>{{ item.title }}</span>\n                    <span class="act-done" @click.stop="toggleDone"></span>\n                    <span class="act-del"  @click.stop="deleteTodo"></span>\n                </a>\n            </li>\n        ',props:["item"],watch:{item:{handler:function(){e.data(this.item.tid,this.item)},deep:!0},"instate.currentTodoId":function(){this.instate.currentTodoId===this.item.tid&&l.$emit("show-item",this.item)}},data:function(){return{instate:r}},methods:{handleSelect:function(){this.instate.currentTodoId=this.item.tid,this.instate.currentPageIndex++},isSelect:function(){return this.instate.currentTodoId===this.item.tid},toggleDone:function(){this.item.isFinish=!this.item.isFinish},deleteTodo:function(){a.confirm("你确定删除该任务吗？")&&(e.remove(this.item.tid),l.$emit("delete-todo",this.item))}}});var p={template:'\n            <div>\n                <div id="detail-wrap">\n                    <div v-if="isShow">\n                        <header class="td-head">\n                            <label>标题：</label>\n                            <span class="title">{{ title }}</span>\n                        </header>\n                        <div class="td-date">\n                            <label>日期：</label>\n                            <time>{{ expireDate }}</time>\n                        </div>\n                        <div class="td-desc">\n                            <label>描述：</label>\n                            <div class="content">{{ content }}</div>\n                        </div>\n                    </div>\n                    <div v-else>\n                        <header class="td-head">\n                            <label for="todo-title">标题：</label>\n                            <input type="text" id="todo-title" maxlength="30" v-model.trim="title"  placeholder="请输入标题">\n                            <span class="warning">< 30</span>\n                        </header>\n                        <div class="td-date">\n                            <label for="todo-expire">日期：</label>\n                            <input type="date" id="todo-expire" v-model="expireDate" placeholder="请输入日期如 2017-01-02">\n                            <span class="warning">2000-01-02</span>\n                        </div>\n                        <div class="td-desc">\n                            <label for="todo-content">描述：</label>\n                            <textarea id="todo-content" placeholder="请输入任务内容" v-model="content"></textarea>\n                        </div>\n                    </div>\n                </div>\n                <footer class="footer">\n                    <div v-if="isShow" class="btns" id="edit-btns">\n                        <div class="btns-inner">\n                            <button class="edit" @click.stop="editTodo">编辑</button>\n                        </div>\n                    </div>\n                    <div v-else class="btns" id="save-btns">\n                        <div class="btns-inner">\n                            <button class="cancel" @click.stop="cancelEdit">取消</button>\n                            <button class="save" @click.stop="saveTodo">保存</button>\n                        </div>\n                    </div>\n                </footer>\n            </div>\n        ',data:function(){return{isShow:!0,editAction:"",preTodo:"",instate:r,title:"",content:"",expireTime:""}},watch:{"instate.currentCatId":function(){this.isShow=!0},"instate.currentStatu":function(){this.isShow=!0},"instate.currentTodoId":function(){this.isShow=!0}},created:function(){l.$on("show-item",this.showItem),l.$on("add-todo",this.addTodo)},computed:{expireDate:{get:function(){return s(this.expireTime)},set:function(t){this.expireTime=new Date(t).getTime()}}},methods:{setData:function(t,e,i){this.title=this.htmlDecode(t||""),this.content=this.htmlDecode(e||""),this.expireTime=i||""},showItem:function(t){this.preTodo=t,t?this.setData(t.title,t.content,t.expireTime):this.setData()},addTodo:function(){this.setData("未命名任务","",Date.now()),this.isShow=!1,this.editAction="add"},editTodo:function(){this.isShow=!1,this.editAction="edit"},cancelEdit:function(){"add"===this.editAction&&this.instate.currentPageIndex--,this.isShow=!0,this.editAction="",this.setData(this.preTodo.title,this.preTodo.content,this.preTodo.expireTime)},saveTodo:function(){if(this.editAction){if(!this.title.length||this.title.length>30)return void a.alert("任务名称不能为空，也不能超过30字！");if(!this.expireDate.length)return void a.alert("过期时间不能为空！");if(!this.content.length||this.content.length>800)return void a.alert("任务内容不能为空，也不能超过800字！");switch(this.title=this.htmlEncode(this.title),this.content=this.htmlEncode(this.content),this.editAction){case"add":var t=new n(this.instate.currentCatId,this.title,this.content,this.expireTime);e.data(t.tid,t),l.$emit("added-todo",t);break;case"edit":this.preTodo.title=this.title,this.preTodo.expireTime=this.expireTime,this.preTodo.content=this.content}this.isShow=!0,this.editAction=""}},htmlEncode:function(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/ /g,"&nbsp;").replace(/\'/g,"&#39;").replace(/\"/g,"&quot;")},htmlDecode:function(t){return t.replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&nbsp;/g," ").replace(/&#39;/g,"'").replace(/&quot;/g,'"')}}},m=new t({template:'\n            <div>\n                <header id="header">\n                    <h1>GTD T<span>◎◎</span>L</h1>\n                    <a  href="javascript:void(0);" class="icon-back"\n                        :class="{hidden: isHidden}"\n                        @click="goBack">&lt;</a>\n                </header>\n                <main class="main">\n                    <category-list-view id="menu" class="page" :class="computePageClass(\'menu\')"></category-list-view>\n                    <todo-list-view id="list" class="page" :class="computePageClass(\'list\')"></todo-list-view>\n                    <todo-detail-view id="detail" class="page" :class="computePageClass(\'detail\')"></todo-detail-view>\n                </main>\n            </div>\n        ',data:function(){return{instate:r,pages:["menu","list","detail"]}},computed:{isHidden:function(){return this.instate.currentPageIndex<1}},methods:{pageActive:function(t){return this.pages.indexOf(t)===this.instate.currentPageIndex},pagePrev:function(t){return this.pages.indexOf(t)<this.instate.currentPageIndex},pageNext:function(t){return this.pages.indexOf(t)>this.instate.currentPageIndex},computePageClass:function(t){return{"page-active":this.pageActive(t),"page-prev":this.pagePrev(t),"page-next":this.pageNext(t)}},goBack:function(){this.instate.currentPageIndex--}},components:{"category-list-view":h,"todo-list-view":u,"todo-detail-view":p}});return{init:function(){m.$mount("#app")}}});